FROM ubuntu:xenial
# switch from anaconda python3 image to ubuntu clean image, as debian 8 do not support sql
# server odbc driver well

MAINTAINER Simon MA <ma.yijun@outlook.com>

USER root

#  below part refered docker-stacks/base-notebooks

ENV DEBIAN_FRONTEND noninteractive

#add ubuntu cn mirror to speed up
COPY sources.list /etc/apt/sources.list
RUN chown root:root /etc/apt/sources.list && chmod 644 /etc/apt/sources.list

RUN apt-get update  \
 && apt-get install -yq --no-install-recommends \
    wget \
    bzip2 \
    ca-certificates \
    sudo \
    locales \
    fonts-liberation \
    apt-transport-https \
    git \
    tzdata \
    gcc \
    fonts-dejavu \
    gfortran \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && \
    locale-gen

# Install Tini
RUN apt-get update  && apt-get install -y curl grep sed dpkg && \
    TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` && \
    curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb" > tini.deb && \
    dpkg -i tini.deb && \
    rm tini.deb && \
    apt-get clean \
     && rm -rf /var/lib/apt/lists/*

ENV CONDA_DIR=/opt/conda \
    SHELL=/bin/bash \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8

ENV PATH=$CONDA_DIR/bin:$PATH

ENV MINICONDA_VERSION 4.3.21
RUN cd /tmp && \
    wget --quiet https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \
    echo "c1c15d3baba15bf50293ae963abef853 *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh" | md5sum -c - && \
    /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR && \
    rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \
    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ && \
    conda config --set show_channel_urls yes && \
    conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/ &&\
    $CONDA_DIR/bin/conda config --system --set auto_update_conda false && \
    $CONDA_DIR/bin/conda update --all --quiet --yes && \
    conda clean -tipsy

# add conda tsinghua mirror to speed up in CN

# below part  referred docker-stacks/base-notebooks

RUN curl --insecure https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
    && curl --insecure https://packages.microsoft.com/config/ubuntu/16.04/prod.list > /etc/apt/sources.list.d/mssql-release.list \
    && echo 'Acquire::https::Verify-Peer "false";'> /etc/apt/apt.conf.d/apt.conf \
    && apt-get update \
    && ACCEPT_EULA=Y apt-get install -y msodbcsql \
    && ACCEPT_EULA=Y apt-get install mssql-tools \
    && apt-get clean \
     && rm -rf /var/lib/apt/lists/*


# install sql server odbc. curl use --insecure option as my company use self-managed PKI. so ingore the CA issue

# ipython backend layer packages: used for modeling and computing
ARG IPYTHON
ARG IPYTHON_SQL
ARG XGBOOST
ARG PYODBC
ARG LIBGCC
ARG PANDAS
ARG SCIKIT_LEARN
ARG JUPYTERLAB
ARG NOTEBOOK

RUN pip install -i https://pypi.tuna.tsinghua.edu.cn/simple \
    ipython-sql==$IPYTHON_SQL \
    xgboost==$XGBOOST \
    && rm -rf /tmp/pip-*-unpack \
    &&  conda install -y ipython=$IPYTHON \
        pyodbc=$PYODBC \
        libgcc=$LIBGCC \
        pandas=$PANDAS \
        scikit-learn=$SCIKIT_LEARN \
        jupyterlab=$JUPYTERLAB \
        notebook=$NOTEBOOK \
    && conda clean -y -a


RUN conda install --quiet --yes \
    'r-base=3.4.*' \
    'r-irkernel=0.8*' \
    'r-plyr=1.8*' \
    'r-devtools=1.13*' \
    'r-tidyverse=1.1*' \
    'r-shiny=1.0*' \
    'r-rmarkdown=1.6*' \
    'r-forecast=8.2*' \
    'r-rsqlite=2.0*' \
    'r-reshape2=1.4*' \
    'r-nycflights13=0.2*' \
    'r-caret=6.0*' \
    'r-rcurl=1.95*' \
    'r-crayon=1.3*' \
    'r-randomforest=4.6*' && \
    conda clean -y -a

# frond end packages: used for graphing and charts

ARG PYECHARTS
ARG CUFFLINKS
ARG DECLAR_WIDGET
ARG IPYWIDGETS
ARG SEABORN
ARG JUPY_NBEXT

RUN  pip install -i https://pypi.tuna.tsinghua.edu.cn/simple \
     pyecharts==$PYECHARTS \
     cufflinks==$CUFFLINKS \
     jupyter_declarativewidgets==$DECLAR_WIDGET \
    && conda install -y   jupyter_contrib_nbextensions=$JUPY_NBEXT \
    ipywidgets=$IPYWIDGETS \
     seaborn=$SEABORN \
     && rm -rf /tmp/pip-*-unpack \
     && conda clean -y -a
#basic package setup, some packages's version are not defined as they are not stable yet and clean up caches


# dashboard related packageds

ARG DASHBOARDS_VER
ARG JUPY_CMS
ARG JUPY_DASH_BUNDLERS

RUN conda install -y jupyter_dashboards=$DASHBOARDS_VER \
    jupyter_cms=$JUPY_CMS \
    jupyter_dashboards_bundlers=$JUPY_DASH_BUNDLERS \
    && jupyter bundlerextension enable --sys-prefix --py dashboards_bundlers \
    && conda clean -y -a




RUN  mkdir -p /root/report

# folder to hold all notebooks

WORKDIR /root

COPY jupyter_notebook_config.py /root/.jupyter/
COPY start_notebook.sh /root/

RUN chmod +x /root/start_notebook.sh

EXPOSE 8888

ENTRYPOINT ["/usr/bin/tini", "--"]

CMD ["/root/start_notebook.sh"]